<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="theoryFragment1">
        <item name="paragraph1">
              Структурирование информации - установление главных элементов в информационных сообщениях и установление связей между ними.
            <![CDATA[<br></br>]]>Структурирование возможно при помощи таких информационных моделей, как:
        </item>
        <item name="paragraph2">
             <![CDATA[<b>1) Множество</b>]]> - совокупность неповторяющихся объектов, объединенных в одно целое по какому ‒ либо признаку. Пример: {1, 2, 3, 4}
            или {Саша, Аскар, Шамиль, Эдвин, Кирилл}. В множестве порядок следования не важен.
        </item>
        <item name="paragraph3">
             <![CDATA[<b>2) Линейный список</b>]]> — это структура данных, состоящая из элементов одного типа, связанных между собой последовательно посредством указателей. Каждый элемент списка имеет указатель на следующий элемент.
        </item>
        <item name="paragraph4">
             <![CDATA[<b>3) Граф</b>]]> - абстрактный математический объект, представляющий между собой множество вершин графа и набор рёбер, то есть соединений между парами вершин.
        </item>
        <item name="paragraph5">
             <![CDATA[<b>4) Таблица</b>]]> - структурирование данных, путём распределения данных по однотипным строкам и столбцам.
        </item>
        <item name="paragraph6">
             <![CDATA[<b>5) Дерево</b>]]> - граф, части или элементы которого расположены от высшего к низшему.
        </item>


        <item name="paragraph8">
             <![CDATA[<b>1)</b>]]> На рисунке справа схема дорог Н-ского района изображена в виде графа, в таблице содержатся сведения о длинах этих дорог (в километрах).
Так как таблицу и схему рисовали независимо друг от друга, то нумерация населённых пунктов в таблице никак не связана с буквенными обозначениями на графе. <![CDATA[<br></br>]]>
            Определите, какова длина дороги из пункта Г в пункт Е. В ответе запишите целое число – так, как оно указано в таблице.
        </item>
        <item name="paragraph9">
             <![CDATA[<b>Анализируя</b>]]> таблицу городов с расстояниями и схему, первое с чего нужно начать это определить точки отличные от остальных. Пункт Г − единственный пункт с тремя дорогами, значит, ему соответствует П2.
            Пункт Е − единственный с четырьмя дорогами, значит, ему соответствует П4. Возращаемся к данным из таблицы и видим, что расстояние от П2 до П4 равняется 40. Значит длина дороги ГЕ = 40.  <![CDATA[<br></br>]]>
            Ответ: 40
        </item>

        <item name="paragraph10">
             <![CDATA[<b>Между</b>]]> населёнными пунктами A, B, C, D, E, F построены дороги, протяжённость которых приведена в таблице. Отсутствие числа в таблице значает, что прямой дороги между пунктами нет. <![CDATA[<br></br>]]>
            Определите длину кратчайшего пути между пунктами A и F, проходящего через пункт E. Передвигаться можно только по указанным дорогам.
        </item>
        <item name="paragraph11">
             <![CDATA[<b>2)</b>]]> Заметим, что в Е можно попасть только из D и F, следовательно, в маршруте также обязательно должен присутствовать пункт D.
            Составим маршрут следующим образом: стартуя из пункта А, будем всегда выбирать тот пункт, расстояние до которого наименьшее.
            Получим маршрут A—B—D—E—F, его длина равна 2 + 3 + 5 + 5 = 15 км.
            Теперь, начиная с начала маршрута, будем изменять путь, пользуясь следующим соображением: если расстояние, например, A—B—D больше расстояния A—D, то заменяем участок маршрута A—B—D на A—D.
            Попробовав произвести все такие замены, получим, что маршрут A—B—D—E—F — самый короткий из тех, что удовлетворяют условию задачи. <![CDATA[<br></br>]]>
            Ответ: 15
        </item>
    </string-array>
    <string-array name="theoryFragment2">
        <item name="paragraph1">
            1) Инверсия — унарная операция над высказываниями, в результате выполнения которой высказывание становится противоположным исходному высказыванию. <![CDATA[<br></br>]]>
            ¬А (отрицание, инверсия)
        </item>
        <item name="paragraph2">
            2) Конъюнкция - это сложное логическое выражение, которое считается истинным в том и только том случае, когда оба простых выражения являются истинными,
            во всех остальных случаях данное сложеное выражение ложно. <![CDATA[<br></br>]]>
            A &amp; B; A ⋀ B (конъюнкция, логическое умножение, и)
        </item>
        <item name="paragraph3">
            3) Дизъюнкция - это сложное логическое выражение, которое считается истинным в том случае, когда хотя бы одно из простых выражений является истинным. <![CDATA[<br></br>]]>
            A || B; A ⋁ B (дизъюнкция, логическое сложение, или)
        </item>
        <item name="paragraph4">
            4) Импликация — бинарная логическая связка, по своему применению приближенная к союзам «если…, то…». <![CDATA[<br></br>]]>
            A → B (импликация, логическое следование)
        </item>
        <item name="paragraph5">
            <![CDATA[<b>Следствие из таблиц истинности:</b>]]> <![CDATA[<br></br>]]>
            Логическое произведение A * B * C * … истинно только тогда, когда все множители равны 1. <![CDATA[<br></br>]]>
            Логическая сумма A + B + C + … ложна только тогда, когда все множители равны 0. <![CDATA[<br></br>]]>
              <![CDATA[<b>Порядок выполнения логических операций: </b>]]> Первым делом выполняются операции в скобках. Если нет скобок, сначала выполняются операции *Не*, затем - *И*, затем - *Или*,
             а уже потом  <![CDATA[<b>импликация, равносильность</b>]]>.
        </item>

        <item name="paragraph6">
              <![CDATA[<b>1)</b>]]> Логическая функция F задаётся выражением: <![CDATA[<br></br>]]>
             <![CDATA[<b>(¬x ∧ y ∧ z) ∨ (¬x ∧ ¬y ∧ z) ∨ (¬x ∧ ¬y ∧ ¬z)</b>]]> <![CDATA[<br></br>]]>
            На рисунке приведён фрагмент таблицы истинности функции F, содержащий все наборы аргументов, при которых функция F истинна.
Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных x, y, z. <![CDATA[<br></br>]]>

В ответе напишите буквы x, y, z в том порядке, в котором идут соответствующие им столбцы (сначала – буква, соответствующая первому столбцу, затем – буква, соответствующая второму столбцу,
            и т.д.) Буквы в ответе пишите подряд, никаких разделителей между буквами ставить не нужно.
        </item>
        <item name="paragraph7">
          <![CDATA[<b>Решение:</b>]]> рассмотрим способ решения с построением таблицы истинности. <![CDATA[<br></br>]]>
            Выпишем те наборы переменных, при которых данное выражение равно 1. В наборах переменные запишем в порядке х, y, z. Получим следующие наборы: <![CDATA[<br></br>]]>
            (0, 0, 0) <![CDATA[<br></br>]]>
            (0, 0, 1), <![CDATA[<br></br>]]>
            (0, 1, 1). <![CDATA[<br></br>]]>
            Во всех наборах переменная x принимает значение 0, следовательно, переменной x соответствует второй столбец таблицы. <![CDATA[<br></br>]]>
            Переменная y принимает единичное значение только в одном наборе, следовательно, ей соответствует третий столбец таблицы, тогда первый столбец соответствует переменной z.  <![CDATA[<br></br>]]>
            Для составления таблицы истинности можно воспользоваться программой на языке Python: <![CDATA[<br></br>]]>
            
        </item>

    </string-array>
    <string-array name="theoryFragment3">
        <item name="paragraph1">
        <![CDATA[<b>База данных</b>]]> - это набор данных для информационных сетей и пользователей, хранящихся в особом, организованном виде. Вид хранения данных определяется заданной структурой (схемой)
        базы данных и правилами её управления. <![CDATA[<br></br>]]>
        В заданиях ЕГЭ чаще всего базы данных представлены в виде таблицы. <![CDATA[<br></br>]]>
        <![CDATA[<b>Ключевое поле</b>]]> - это одно или несколько полей, комбинация значений которых однозначно определяет каждую запись в таблице. <![CDATA[<br></br>]]>
        Строки таблицы называются <![CDATA[<b>записями</b>]]>, а столбцы - <![CDATA[<b>полями.</b>]]>
        </item>
        <item name="paragraph2">
             <![CDATA[<b>Реляционная база данных</b>]]> – это набор данных с предопределенными связями между ними. Эти данные организованны в виде набора таблиц, состоящих из столбцов и строк.
        </item>
        <item name="paragraph4">
            Таблица «Движение товаров» содержит записи о поставках товаров в магазины в течение первой декады июня 2021 г., а также информацию о проданных товарах.
            Поле Тип операции содержит значение Поступление или Продажа, а в соответствующее поле Количество упаковок, шт. занесена информация о том, сколько упаковок товара поступило в
            магазин или было продано в течение дня. Заголовок таблицы имеет следующий вид.
        </item>
        <item name="paragraph7">
            Используя информацию из приведённой базы данных, определите на сколько увеличилось количество упаковок крупы манной,
            имеющихся в наличии в магазинах Первомайского района, за период с 1 по 10 июня включительно. <![CDATA[<br></br>]]>
В ответе В ответе запишите только число.
        </item>
        <item name="paragraph8">
       <![CDATA[<b>Решение:</b>]]> задачи подобного типа решаются с помощью стандартных средств Microsoft Excel. Инструмент <![CDATA[<b>фильтр</b>]]> позволяет пользователю оставить только определенные,
             записи, а не все данные таблицы. <![CDATA[<br></br>]]>
            Открыв файл, перейдём на лист «Магазин». Оставляем только записи для магазинов Первомайского района. Узнаём ID магазинов данного района. <![CDATA[<br></br>]]>
            Перейдём на лист «Товар». В этой таблице, воспользовавшись средствами поиска, найдём строку с товаром «Кофе растворимый». Артикул товара — 46. <![CDATA[<br></br>]]>
            Теперь перейдём на лист «Движение товаров». Снова воспользуемся фильтром по столбцу «ID магазина», чтобы вывести в таблице только те записи, которые относятся
            к магазинам Первомайского района. В фильтре отметим те ID магазинов, которые были найдены в таблице
            «Магазин». Также применим фильтр к столбцу «Артикул», чтобы оставить только записи
            о движении товаров по артикулу 46. В результате получим таблицу, удолетворяющую условиям задачи. <![CDATA[<br></br>]]>
            Далее необходимо посчитать количество упаковок кофе растворимого, имеющихся в наличии в магазинах Первомайского района.
            Заметим, что все движения попадают в период с 1 по 10 июня включительно.
            Скопируем полученную таблицу на отдельный лист и отсортируем записи по столбцу «Тип операции».
            Окончательно, воспользовавшись формулой =СУММ(), получаем <![CDATA[<b>ответ — 680</b>]]>.
        </item>
    </string-array>
    <string-array name="theoryFragment4">
        <item name="paragraph1">
              <![CDATA[<b>Кодирование информации</b>]]> - процесс преобразования сигнала из формы, удобной для непосредственного использования информации, в форму, удобную для передач, хранения или
            автоматической переработки. <![CDATA[<br></br>]]>
            Кодирование бывает  <![CDATA[<b>равномерным</b>]]> и  <![CDATA[<b>неравномерным</b>]]>. <![CDATA[<br></br>]]>
            При <![CDATA[<b>равномерном</b>]]> кодировании всем символам соответсвуют коды одинаковой длины. При  <![CDATA[<b>неравномерном</b>]]> кодировании разным символам соответствуют коды разной
            длины, это затрудняет декодирование. <![CDATA[<br></br>]]>
            Код называется <![CDATA[<b>однозначно декодируемым</b>]]>, если любое сообщение, составленное из кодовых слов, можно декодировать единственным способом. <![CDATA[<br></br>]]>
             <![CDATA[<b>Условие Фано</b>]]> - никакое кодовое слово не является началом другого кодового слова. <![CDATA[<br></br>]]>
              <![CDATA[<b>Обратное условие Фано</b>]]> - никакое кодовое словоне является окончанием другого слова.
        </item>
        <item name="paragraph2">
            1) Для кодирования некоторой последовательности, состоящей из букв К, Л, М, Н, решили использовать неравномерный двоичный код, удовлетворяющий условию Фано.
            Для буквы Н использовали кодовое слово 0, для буквы К — кодовое слово 10. Какова наименьшая возможная суммарная длина всех четырёх кодовых слов?
        </item>
        <item name="paragraph3">
           <![CDATA[<b>Решение:</b>]]> очень важно помнить и соблюдать условие Фано. <![CDATA[<br></br>]]>
            Найдём наиболее короткие представления для всех букв. Кодовые слова 01 и 00 использовать нельзя, поскольку тогда нарушается условие Фано. Используем, например, для буквы Л кодовое слово 11. <![CDATA[<br></br>]]>
            Тогда для четвёртой буквы нельзя подобрать кодовое слово, не нарушая условие Фано. Следовательно, для оставшихся двух букв нужно использовать трёхзначные кодовые слова. <![CDATA[<br></br>]]>
            Закодируем буквы Л и М кодовыми словами 110 и 111. Тогда суммарная длина всех четырёх кодовых слов равна 1 + 2 + 3 + 3 = 9. <![CDATA[<br></br>]]>
            <![CDATA[<b>Ответ:</b>]]> 9
        </item>

        <item name="paragraph4">
            2) Для 5 букв латинского алфавита заданы их двоичные коды (для некоторых букв — из двух бит, для некоторых — из трех). Какой набор букв закодирован двоичной строкой 1100000100110? <![CDATA[<br></br>]]>
            Эти коды представлены в таблице:
        </item>
        <item name="paragraph5">
            <![CDATA[<b>Решение:</b>]]> мы видим, что выполняется условие Фано: никакое кодовое слово не является началом другого кодового слова, поэтому однозначно можем раскодировать сообщение с начала.<![CDATA[<br></br>]]>
        Разобьём код слева направо по данным таблицы и переведём его в буквы:<![CDATA[<br></br>]]>
        <![CDATA[<b>Ответ:</b>]]> 110 000 01 001 10 — b a c d e.
        </item>
    </string-array>
    <string-array name="theoryFragment5">
        <item name="paragraph1">
            <![CDATA[<b>1)</b>]]> Исполнитель Чертежник имеет перо, которое можно поднимать, опускать и перемещать. <![CDATA[<br></br>]]>
            При перемещении опущенного пера за ним остается след в виде прямой линии. У исполнителя существуют следующие команды: <![CDATA[<br></br>]]>
            Сместиться на вектор (а, b) – исполнитель перемещается в точку, в которую можно попасть из данной, пройдя а единиц по горизонтали и b – по вертикали. <![CDATA[<br></br>]]>
            Запись: Повторить 5[Команда 1 Команда 2] означает, что последовательность команд в квадратных скобках повторяется 5 раз.
            <![CDATA[<br></br>]]><![CDATA[<br></br>]]>
            Чертежник находится в начале координат. Чертежнику дан для исполнения следующий алгоритм: <![CDATA[<br></br>]]> <![CDATA[<br></br>]]>
            Сместиться на вектор (5,2) <![CDATA[<br></br>]]>
            Сместиться на вектор (-3, 3) <![CDATA[<br></br>]]>
            Повторить 3[Сместиться на вектор (1,0)] <![CDATA[<br></br>]]>
            Сместиться на вектор (3, 1)<![CDATA[<br></br>]]> <![CDATA[<br></br>]]>
            На каком расстоянии от начала координат будет находиться исполнитель Чертежник в результате выполнения данного алгоритма?
        </item>
        <item name="paragraph2">
            <![CDATA[<b>Решение:</b>]]> задачи подобного типа решаются путём вычисления конечных координат <![CDATA[<b>x</b>]]> и <![CDATA[<b>y</b>]]>. <![CDATA[<br></br>]]>
            А расстояние вычисляется по формуле r = \sqrt(x^(2)+y^(2))  <![CDATA[<br></br>]]>
            Конечная точка будет обладать координатами по оси x и y. Эти координаты можно складывать независимо друг от друга. <![CDATA[<br></br>]]>
            Найдём значение x: 5 - 3 + 1 + 1 + 1 + 3 = 8. <![CDATA[<br></br>]]>
            Найдём значение y: 2 + 3 + 1 = 6.  <![CDATA[<br></br>]]>
            r = \sqrt(8^(2)+6^(2)) = \sqrt(100) = 10. <![CDATA[<br></br>]]>
            <![CDATA[<b>Ответ:</b>]]> 10.
        </item>
        <item name="paragraph3">
            <![CDATA[<b>2)</b>]]>У исполнителя УТРОИТЕЛЬ две команды, которым присвоены номера: <![CDATA[<br></br>]]>
             <![CDATA[<b>1. вычти 1</b>]]> <![CDATA[<br></br>]]>
             <![CDATA[<b>2. умножь на 3</b>]]>
            <![CDATA[<br></br>]]> <![CDATA[<br></br>]]>
            Первая из них уменьшает число на экране на 1, вторая – увеличивает его в три раза. <![CDATA[<br></br>]]>
            Запишите порядок команд в программе получения из числа 3 числа 16, содержащей не более 5 команд, указывая лишь номера команд.
        </item>
        <item name="paragraph4">
          <![CDATA[<b>Решение:</b>]]> данную и похожие задачи следует решать с конца. А в ответ записать полученные команды справа налево. <![CDATA[<br></br>]]>
            1) Число 16 не делится на 3, значит, оно получено вычитанием единицы из числа 17: 16 = 17 - 1 (команда 1). <![CDATA[<br></br>]]>
            Повторим рассуждение для числа 17: 17 = 18 - 1 (команда 1). <![CDATA[<br></br>]]>
            2) Т.к. мы хотим получить не более 5 команд, то для получения числа 18 выгодно использовать умножение: 18 = 6 * 3 (команда 2). <![CDATA[<br></br>]]>
            Для числа 6 применяем второе рассуждение: 6 = 2 * 3(команда 2), а число 2 получено как 2 = 3 - 1 (команда 1). <![CDATA[<br></br>]]>
            Мы получаем набор команд - 11221, в ответ записываем обратную записть, так как решали задачу с конца. <![CDATA[<br></br>]]>
            <![CDATA[<b>Ответ:</b>]]> 12211
        </item>

    </string-array>
</resources>