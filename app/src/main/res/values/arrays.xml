<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="theoryFragment1">
        <item name="paragraph1">
              Структурирование информации - установление главных элементов в информационных сообщениях и установление связей между ними.
            <![CDATA[<br></br>]]>Структурирование возможно при помощи таких информационных моделей, как:
        </item>
        <item name="paragraph2">
             <![CDATA[<b>1) Множество</b>]]> - совокупность неповторяющихся объектов, объединенных в одно целое по какому ‒ либо признаку. Пример: {1, 2, 3, 4}
            или {Саша, Аскар, Шамиль, Эдвин, Кирилл}. В множестве порядок следования не важен.
        </item>
        <item name="paragraph3">
             <![CDATA[<b>2) Линейный список</b>]]> — это структура данных, состоящая из элементов одного типа, связанных между собой последовательно посредством указателей. Каждый элемент списка имеет указатель на следующий элемент.
        </item>
        <item name="paragraph4">
             <![CDATA[<b>3) Граф</b>]]> - абстрактный математический объект, представляющий между собой множество вершин графа и набор рёбер, то есть соединений между парами вершин.
        </item>
        <item name="paragraph5">
             <![CDATA[<b>4) Таблица</b>]]> - структурирование данных, путём распределения данных по однотипным строкам и столбцам.
        </item>
        <item name="paragraph6">
             <![CDATA[<b>5) Дерево</b>]]> - граф, части или элементы которого расположены от высшего к низшему.
        </item>


        <item name="paragraph8">
             <![CDATA[<b>1)</b>]]> На рисунке справа схема дорог Н-ского района изображена в виде графа, в таблице содержатся сведения о длинах этих дорог (в километрах).
Так как таблицу и схему рисовали независимо друг от друга, то нумерация населённых пунктов в таблице никак не связана с буквенными обозначениями на графе. <![CDATA[<br></br>]]>
            Определите, какова длина дороги из пункта Г в пункт Е. В ответе запишите целое число – так, как оно указано в таблице.
        </item>
        <item name="paragraph9">
             <![CDATA[<b>Анализируя</b>]]> таблицу городов с расстояниями и схему, первое с чего нужно начать это определить точки отличные от остальных. Пункт Г − единственный пункт с тремя дорогами, значит, ему соответствует П2.
            Пункт Е − единственный с четырьмя дорогами, значит, ему соответствует П4. Возращаемся к данным из таблицы и видим, что расстояние от П2 до П4 равняется 40. Значит длина дороги ГЕ = 40.  <![CDATA[<br></br>]]>
            Ответ: 40
        </item>

        <item name="paragraph10">
             <![CDATA[<b>Между</b>]]> населёнными пунктами A, B, C, D, E, F построены дороги, протяжённость которых приведена в таблице. Отсутствие числа в таблице значает, что прямой дороги между пунктами нет. <![CDATA[<br></br>]]>
            Определите длину кратчайшего пути между пунктами A и F, проходящего через пункт E. Передвигаться можно только по указанным дорогам.
        </item>
        <item name="paragraph11">
             <![CDATA[<b>2)</b>]]> Заметим, что в Е можно попасть только из D и F, следовательно, в маршруте также обязательно должен присутствовать пункт D.
            Составим маршрут следующим образом: стартуя из пункта А, будем всегда выбирать тот пункт, расстояние до которого наименьшее.
            Получим маршрут A—B—D—E—F, его длина равна 2 + 3 + 5 + 5 = 15 км.
            Теперь, начиная с начала маршрута, будем изменять путь, пользуясь следующим соображением: если расстояние, например, A—B—D больше расстояния A—D, то заменяем участок маршрута A—B—D на A—D.
            Попробовав произвести все такие замены, получим, что маршрут A—B—D—E—F — самый короткий из тех, что удовлетворяют условию задачи. <![CDATA[<br></br>]]>
            Ответ: 15
        </item>
    </string-array>
    <string-array name="theoryFragment2">
        <item name="paragraph1">
            1) Инверсия — унарная операция над высказываниями, в результате выполнения которой высказывание становится противоположным исходному высказыванию. <![CDATA[<br></br>]]>
            ¬А (отрицание, инверсия)
        </item>
        <item name="paragraph2">
            2) Конъюнкция - это сложное логическое выражение, которое считается истинным в том и только том случае, когда оба простых выражения являются истинными,
            во всех остальных случаях данное сложеное выражение ложно. <![CDATA[<br></br>]]>
            A &amp; B; A ⋀ B (конъюнкция, логическое умножение, и)
        </item>
        <item name="paragraph3">
            3) Дизъюнкция - это сложное логическое выражение, которое считается истинным в том случае, когда хотя бы одно из простых выражений является истинным. <![CDATA[<br></br>]]>
            A || B; A ⋁ B (дизъюнкция, логическое сложение, или)
        </item>
        <item name="paragraph4">
            4) Импликация — бинарная логическая связка, по своему применению приближенная к союзам «если…, то…». <![CDATA[<br></br>]]>
            A → B (импликация, логическое следование)
        </item>
        <item name="paragraph5">
            <![CDATA[<b>Следствие из таблиц истинности:</b>]]> <![CDATA[<br></br>]]>
            Логическое произведение A * B * C * … истинно только тогда, когда все множители равны 1. <![CDATA[<br></br>]]>
            Логическая сумма A + B + C + … ложна только тогда, когда все множители равны 0. <![CDATA[<br></br>]]>
              <![CDATA[<b>Порядок выполнения логических операций: </b>]]> Первым делом выполняются операции в скобках. Если нет скобок, сначала выполняются операции *Не*, затем - *И*, затем - *Или*,
             а уже потом  <![CDATA[<b>импликация, равносильность</b>]]>.
        </item>

        <item name="paragraph6">
              <![CDATA[<b>1)</b>]]> Логическая функция F задаётся выражением: <![CDATA[<br></br>]]>
             <![CDATA[<b>(¬x ∧ y ∧ z) ∨ (¬x ∧ ¬y ∧ z) ∨ (¬x ∧ ¬y ∧ ¬z)</b>]]> <![CDATA[<br></br>]]>
            На рисунке приведён фрагмент таблицы истинности функции F, содержащий все наборы аргументов, при которых функция F истинна.
Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных x, y, z. <![CDATA[<br></br>]]>

В ответе напишите буквы x, y, z в том порядке, в котором идут соответствующие им столбцы (сначала – буква, соответствующая первому столбцу, затем – буква, соответствующая второму столбцу,
            и т.д.) Буквы в ответе пишите подряд, никаких разделителей между буквами ставить не нужно.
        </item>
        <item name="paragraph7">
          <![CDATA[<b>Решение:</b>]]> рассмотрим способ решения с построением таблицы истинности. <![CDATA[<br></br>]]>
            Выпишем те наборы переменных, при которых данное выражение равно 1. В наборах переменные запишем в порядке х, y, z. Получим следующие наборы: <![CDATA[<br></br>]]>
            (0, 0, 0) <![CDATA[<br></br>]]>
            (0, 0, 1), <![CDATA[<br></br>]]>
            (0, 1, 1). <![CDATA[<br></br>]]>
            Во всех наборах переменная x принимает значение 0, следовательно, переменной x соответствует второй столбец таблицы. <![CDATA[<br></br>]]>
            Переменная y принимает единичное значение только в одном наборе, следовательно, ей соответствует третий столбец таблицы, тогда первый столбец соответствует переменной z.  <![CDATA[<br></br>]]>
            Для составления таблицы истинности можно воспользоваться программой на языке Python: <![CDATA[<br></br>]]>
            
        </item>


    </string-array>
</resources>